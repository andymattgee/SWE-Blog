This will serve as basic walk through of folder structure of app:

/client - This directory will contain all your React frontend code. Inside, you might have:
    /src - For your React components, utilities, hooks, and any other JavaScript or JSX files.
    /public - For public assets like images, index.html, etc.
    
/server - Contains your Express.js server and API logic. 
    /controllers - For functions that directly respond to HTTP requests.
    /models - For your MongoDB models (using Mongoose, perhaps).
    /routes - To define your API endpoints.

.env file -> stores config variables such as PORT, DB connection strings, API keys, esentially passwords that you want to remain protected 
    when pushing up to gitHub

webpack.config ->
    -Transpile JSX and ES6+ syntax to browser-compatible JavaScript using Babel.
    -Bundle CSS, possibly processing it through PostCSS (which you'll need for Tailwind CSS).
    -Optimize images and other static assets.
    -Enable hot module replacement (HMR) for a smoother development experience.

package.json - To manage project dependencies and scripts.
    -This project will only utilize a single package.json in root folder for simplicity 
    -The package.json file manages a projectâ€™s metadata, dependencies, scripts, and configuration, ensuring consistent installation and execution of Node.js applications. 

gitIgnore -> 
    -which files and directories to ignore so they are not pushed up to repo/ gitHub
    - usually node_modules, build/, .env (.enc.local/.enc.production)

node_modules ->
    -contains all installed dependencies, as defined in the package.json file. 
    -stores that actual code of libraries/packages that your project relies on
    ** when someone clones your repo, they should run 'npm install' to recrease node_modules on their machine that will allow project to run **

Setting up MongoDB
    make new data base in Mongo Atlas DB, browse collections, + create database.
    How to connect: click on Database on left side, next to cluster name (cluster0), Connect button
        click on drivers button, copy connection string to code, replace password and username
        make sure to add either dbURL to .env or password/username to .env

Git commit messages:  cmd + S to save changes, cmd + W exits the window,



Major ToDo Changes 3/5/25 w Cursor AP
    BELOW CHANGES MADE WITH AGENT USING CLAUDE SONNET 3.5
    Todos.js Model page updated to reflect new toDo fields
    todoController.js page modified to handle new fields
    todoModal.jsx newly created page that created a reusable model for creating and editing tasks
    TodoItems.jsx displays individual TodoItems
    Todos.jsx updated - main page updated with new functionality

    PUSHED AND COMBINED W DEV VIA PR


Minor ToDo changes 3/6/2
    BELOW DONE WITH AGENT USING CLAUDE SONNET 3.5
    Reordered the today,pending,overdue section and made them wider
    Made sure text fields were clear for every new task
    Confirmation modal popup for deleting a task
    Changed order of tasks so that new tasks appear at top of list
    Changed red indicator to an exclamation point ! instead of red dot 
    Changed edit and delete button to icons and change priotity indicator to an icon

    DOCS ADDED USING EDIT FETURE W GPT-4o-MINI
    Docs and comments added to the following pages:
        Models/todo.js
        Controllers/todoController
        components/TodoModal.jsx (new component)
        componenets/TodoItem.jsx (new component)
        pages/Todos.jsx
